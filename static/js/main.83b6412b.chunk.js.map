{"version":3,"sources":["style/Global.tsx","ui-kit/util/getThemeValue.ts","ui-kit/components/Svg/Svg.tsx","ui-kit/components/Spinner/MeowthCoin.tsx","ui-kit/components/Spinner/Spinner.tsx","components/layout/Container.tsx","components/layout/Page.tsx","components/PageLoader.tsx","App.tsx","config/constants/types.ts","utils/getRpcUrl.ts","contexts/Localisation/translationsContext.ts","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","ui-kit/theme/colors.ts","ui-kit/components/Alert/theme.ts","ui-kit/components/Button/theme.ts","ui-kit/components/Button/types.ts","ui-kit/theme/base.ts","ui-kit/components/Card/theme.ts","ui-kit/components/Radio/theme.ts","ui-kit/components/Toggle/theme.ts","ui-kit/widgets/Menu/theme.ts","ui-kit/widgets/Modal/theme.ts","ui-kit/theme/dark.ts","ui-kit/theme/light.ts","contexts/ThemeContext.tsx","utils/web3.ts","contexts/BlockContext.tsx","contexts/RefreshContext.tsx","config/constants/contracts.ts","config/constants/farms.ts","utils/addressHelpers.ts","state/farms/index.ts","state/toasts/index.ts","config/constants/pools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/teams.ts","state/profile/index.tsx","state/teams/helpers.ts","state/profile/getProfile.ts","state/teams/index.tsx","state/index.ts","Providers.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","theme","colors","background","getThemeValue","path","fallback","get","rotate","keyframes","spinStyle","css","Svg","styled","svg","color","spin","space","defaultProps","width","xmlns","Icon","props","viewBox","transform","fill","d","Container","div","Rotating","MeowthCoin","Spinner","size","style","textAlign","mediaQueries","sm","Page","lg","Wrapper","PageLoader","BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","QuoteToken","PoolCategory","App","useWallet","account","connect","useEffect","console","warn","Global","exact","React","memo","nodes","process","getNodeUrl","randomIndex","random","length","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","parseInt","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","children","useState","storedLangCode","localStorage","getItem","storedLang","filter","getStoredLang","listLanguageTranslations","undefined","fetchTranslationsForSelectedLanguage","then","translationApiResponse","data","catch","Provider","value","langObject","setItem","baseColors","failure","primary","primaryBright","primaryDark","secondary","success","warning","brandColors","binance","lightColors","backgroundDisabled","contrast","invertedContrast","input","tertiary","text","textDisabled","textSubtle","borderColor","card","gradients","bubblegum","darkColors","light","dark","PRIMARY","SECONDARY","TERTIARY","TEXT","DANGER","SUBTLE","SUCCESS","backgroundActive","backgroundHover","border","borderColorHover","boxShadow","boxShadowActive","danger","subtle","breakpointMap","xs","md","xl","shadows","level1","active","focus","inset","siteWidth","breakpoints","Object","values","map","breakpoint","nav","spacing","radii","small","default","circle","zIndices","dropdown","modal","boxShadowSuccess","boxShadowWarning","cardHeaderBackground","handleBackground","hover","darkTheme","base","isDark","alert","darkAlert","button","darkButton","darkCard","toggle","darkToggle","darkNav","darkModal","radio","darkRadio","lightTheme","lightAlert","lightButton","lightCard","lightToggle","lightNav","lightModal","lightRadio","ThemeContext","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3","getContract","abi","address","contractOptions","eth","Contract","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","interval","setInterval","a","getBlockNumber","blockNumber","current","clearInterval","RefreshContext","slow","fast","RefreshContextProvider","setSlow","setFast","prev","cake","97","56","syrup","masterChef","sousChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","ust","pancakeProfile","pancakeRabbits","rabbitMintingFarm","claimRefund","pointCenterIfo","farms","pid","lpSymbol","lpAddresses","tokenSymbol","tokenAddresses","quoteTokenSymbol","BNB","quoteTokenAdresses","contracts","getAddress","getMasterChefAddress","addresses","getPancakeProfileAddress","initialState","farmsConfig","farmsSlice","createSlice","name","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","farm","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","toastsSlice","push","toastIndex","findIndex","toast","id","splice","unshift","remove","clear","pools","sousId","tokenName","stakingTokenName","CAKE","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","tokenDecimals","poolsConfig","p","masterChefABI","PoolsSlice","setPoolsPublicData","livePoolsData","pool","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","teams","description","images","alt","ipfs","textColor","users","points","profileSlice","pancakeProfileAbi","pancakeRabbitsAbi","isInitialized","isLoading","hasRegistered","profileFetchStart","profileFetchSucceeded","profile","profileFetchFailed","teamsList","reduce","accum","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","configureStore","devTools","reducer","farmsReducer","toasts","toastsReducer","poolsReducer","profileReducer","teamsReducer","Providers","rpcUrl","store","chainId","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83b6412b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Rubik', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import get from \"lodash/get\";\nimport { DefaultTheme } from \"styled-components\";\n\nconst getThemeValue = (path: string, fallback?: string | number) => (theme: DefaultTheme): string =>\n  get(theme, path, fallback);\n\nexport default getThemeValue;\n","import styled, { css, keyframes } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport getThemeValue from \"../../util/getThemeValue\";\nimport { SvgProps } from \"./types\";\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst spinStyle = css`\n  animation: ${rotate} 2s linear infinite;\n`;\n\nconst Svg = styled.svg<SvgProps>`\n  fill: ${({ theme, color }) => getThemeValue(`colors.${color}`, color)(theme)};\n  flex-shrink: 0;\n\n  ${({ spin }) => spin && spinStyle}\n  ${space}\n`;\n\nSvg.defaultProps = {\n  color: \"text\",\n  width: \"20px\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  spin: false,\n};\n\nexport default Svg;\n","import React from 'react'\nimport Svg from '../Svg/Svg'\nimport { SvgProps } from '../Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 128 128\" {...props}>\n      <svg viewBox=\"111.807 70.962 178.128 213.114\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g transform=\"matrix(4.562777, 1.482541, -1.482541, 4.562777, -397.905524, -519.623726)\">\n          <path\n            fill=\"#0d131a\"\n            d=\"M 176.407 104.956 C 177.307 107.69 177.074 110.34 175.707 112.906 C 174.374 115.473 172.324 117.206 169.557 118.106 C 166.791 119.006 164.091 118.79 161.457 117.456 C 158.857 116.123 157.107 114.056 156.207 111.256 L 150.807 94.506 C 149.907 91.74 150.124 89.056 151.457 86.456 C 152.757 83.856 154.807 82.09 157.607 81.156 C 160.374 80.256 163.057 80.473 165.657 81.806 C 168.257 83.14 170.007 85.206 170.907 88.006 L 176.407 104.956\"\n          />\n          <path\n            fill=\"#f9be00\"\n            d=\"M 174.757 104.556 C 175.591 107.09 175.491 109.506 174.457 111.806 C 173.424 114.173 171.691 115.756 169.257 116.556 C 166.657 117.423 164.224 117.156 161.957 115.756 C 159.791 114.423 158.291 112.44 157.457 109.806 L 152.557 94.706 C 151.724 92.14 151.824 89.74 152.857 87.506 C 153.891 85.206 155.641 83.656 158.107 82.856 C 160.574 82.056 162.941 82.29 165.207 83.556 C 167.441 84.79 168.957 86.69 169.757 89.256 L 174.757 104.556\"\n          />\n          <path\n            fill=\"#0d131a\"\n            d=\"M 168.607 85.906 C 169.041 85.773 169.391 86.006 169.657 86.606 C 169.924 87.206 169.891 87.573 169.557 87.706 L 151.907 93.706 C 151.307 93.906 150.957 93.656 150.857 92.956 C 150.757 92.29 150.991 91.84 151.557 91.606 L 168.607 85.906\"\n          />\n          <path\n            fill=\"#0d131a\"\n            d=\"M 170.757 92.306 C 171.191 92.173 171.507 92.44 171.707 93.106 C 171.907 93.773 171.841 94.19 171.507 94.356 L 153.707 100.406 C 153.107 100.606 152.741 100.39 152.607 99.756 C 152.507 99.09 152.741 98.656 153.307 98.456 L 162.257 95.256 L 170.757 92.306\"\n          />\n          <path\n            fill=\"#0d131a\"\n            d=\"M 173.057 99.206 C 173.491 99.073 173.824 99.273 174.057 99.806 C 174.291 100.306 174.241 100.64 173.907 100.806 L 165.407 103.956 L 156.307 107.206 C 155.707 107.44 155.274 107.223 155.007 106.556 C 154.774 105.923 154.941 105.49 155.507 105.256 C 159.174 103.89 165.024 101.873 173.057 99.206\"\n          />\n          <path\n            fill=\"#0d131a\"\n            d=\"M 175.357 105.856 C 175.791 105.723 176.107 105.923 176.307 106.456 C 176.507 106.99 176.441 107.34 176.107 107.506 L 158.457 113.456 C 157.857 113.69 157.474 113.506 157.307 112.906 C 157.141 112.34 157.341 111.956 157.907 111.756 L 166.857 108.656 L 175.357 105.856\"\n          />\n        </g>\n      </svg>\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport MeowthCoin from './MeowthCoin'\nimport { SpinnerProps } from './types'\n\nconst rotate = keyframes`\n  from \n  { \n      transform: rotateY(0deg); \n  } \n  to { \n      transform: rotateY(-360deg); \n  } \n`\n\nconst Container = styled.div`\n  position: relative;\n`\n\nconst Rotating = styled(MeowthCoin)`\n  animation-name: ${rotate}; \n  animation-timing-function: linear; \n  animation-iteration-count: infinite; \n  animation-duration: 2s; \n\n`\n\nconst Spinner: React.FC<SpinnerProps> = ({ size = 128 }) => {\n  return (\n    <>\n    <Container>\n      <Rotating width={`${size * 0.5}px`} />\n    </Container>\n    <div style={{textAlign: 'center'}}>\n      <p>TEAM ROCKET FINANCE</p>\n      <p>SOON</p>\n    </div>\n    </>\n  )\n}\n\nexport default Spinner\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '../ui-kit/components/Spinner';\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport Pools from './views/Pools'\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null\n  }, [])\n\n  // useEffect(() => {\n  //   if (!account && window.localStorage.getItem('accountStatus')) {\n  //     connect('injected')\n  //   }\n  // }, [account, connect])\n\n  // useFetchPublicData()\n  // useFetchProfile()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Route path=\"/\" exact>\n        <PageLoader />\n      </Route>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'MEOWTH',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'ETH' = 'ETH',\n  'COMP' = 'COMP',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur: string\n} & Images\n\nexport type Nft = {\n  name: string\n  description: string\n  images: NftImages\n  sortOrder: number\n  bunnyId: number\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch(() => {\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import { Colors } from \"./types\";\n\nexport const baseColors = {\n  failure: \"#ED4B9E\",\n  primary: \"#164887\",\n  primaryBright: \"#0e61a7\",\n  primaryDark: \"#1a315d\",\n  secondary: \"#0e61a7\",\n  success: \"#0e61a7\",\n  warning: \"#FFB237\",\n};\n\nexport const brandColors = {\n  binance: \"#F0B90B\",\n};\n\nexport const lightColors = {\n  ...baseColors,\n  ...brandColors,\n  background: \"#FAF9FA\",\n  backgroundDisabled: \"#E9EAEB\",\n  contrast: \"#191326\",\n  invertedContrast: \"#FFFFFF\",\n  input: \"#e5e5e5\",\n  tertiary: \"#EFF4F5\",\n  text: \"#202224\",\n  textDisabled: \"#BDC2C4\",\n  textSubtle: \"#444\",\n  borderColor: \"#E9EAEB\",\n  card: \"#FFFFFF\",\n  gradients: {\n    bubblegum: \"linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)\",\n  },\n};\n\nexport const darkColors = {\n  ...baseColors,\n  ...brandColors,\n  secondary: \"#9A6AFF\",\n  background: \"#100C18\",\n  backgroundDisabled: \"#3c3742\",\n  contrast: \"#FFFFFF\",\n  invertedContrast: \"#191326\",\n  input: \"#483f5a\",\n  primaryDark: \"#7b4244\",\n  tertiary: \"#353547\",\n  text: \"#EAE2FC\",\n  textDisabled: \"#666171\",\n  textSubtle: \"#A28BD4\",\n  borderColor: \"#524B63\",\n  card: \"#27262c\",\n  gradients: {\n    bubblegum: \"linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)\",\n  },\n};","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { AlertTheme } from \"./types\";\n\nexport const light: AlertTheme = {\n  background: lightColors.card,\n};\n\nexport const dark: AlertTheme = {\n  background: darkColors.card,\n};\n","import { ButtonTheme, variants } from \"./types\";\nimport { lightColors, darkColors } from \"../../theme/colors\";\n\nconst { PRIMARY, SECONDARY, TERTIARY, TEXT, DANGER, SUBTLE, SUCCESS } = variants;\n\nexport const light: ButtonTheme = {\n  [PRIMARY]: {\n    background: lightColors.primary,\n    backgroundActive: lightColors.primaryDark,\n    backgroundHover: lightColors.primaryBright,\n    border: 0,\n    borderColorHover: \"currentColor\",\n    boxShadow: \"inset 0px -1px 0px rgba(14, 14, 44, 0.4)\",\n    boxShadowActive: \"inset 0px -1px 0px rgba(14, 14, 44, 0.4)\",\n    color: \"#FFFFFF\",\n  },\n  [SECONDARY]: {\n    background: \"transparent\",\n    backgroundActive: \"transparent\",\n    backgroundHover: \"transparent\",\n    border: `2px solid ${lightColors.primary}`,\n    borderColorHover: lightColors.primaryBright,\n    boxShadow: \"none\",\n    boxShadowActive: \"none\",\n    color: lightColors.primary,\n  },\n  [TERTIARY]: {\n    background: lightColors.tertiary,\n    backgroundActive: lightColors.tertiary,\n    backgroundHover: lightColors.tertiary,\n    border: 0,\n    borderColorHover: \"currentColor\",\n    boxShadow: \"none\",\n    boxShadowActive: \"none\",\n    color: lightColors.primary,\n  },\n  [TEXT]: {\n    background: \"transparent\",\n    backgroundActive: \"transparent\",\n    backgroundHover: lightColors.tertiary,\n    border: 0,\n    borderColorHover: \"currentColor\",\n    boxShadow: \"none\",\n    boxShadowActive: \"none\",\n    color: lightColors.primary,\n  },\n  [DANGER]: {\n    background: lightColors.failure,\n    backgroundActive: \"#D43285\", // darkten 10%\n    backgroundHover: \"#FF65B8\", // lighten 10%\n    border: 0,\n    borderColorHover: \"currentColor\",\n    boxShadow: \"none\",\n    boxShadowActive: \"none\",\n    color: \"#FFFFFF\",\n  },\n  [SUBTLE]: {\n    background: lightColors.textSubtle,\n    backgroundActive: `${lightColors.textSubtle}D9`, // 70% opacity\n    backgroundHover: `${lightColors.textSubtle}B3`, // 85% opacity\n    border: 0,\n    borderColorHover: \"currentColor\",\n    boxShadow: \"none\",\n    boxShadowActive: \"none\",\n    color: \"#FFFFFF\",\n  },\n  [SUCCESS]: {\n    background: lightColors.success,\n    backgroundActive: `${lightColors.success}D9`, // 70% opacity\n    backgroundHover: `${lightColors.success}B3`, // 85% opacity\n    border: 0,\n    borderColorHover: \"currentColor\",\n    boxShadow: \"none\",\n    boxShadowActive: \"none\",\n    color: \"#FFFFFF\",\n  },\n};\n\nexport const dark: ButtonTheme = {\n  [PRIMARY]: {\n    ...light.primary,\n  },\n  [SECONDARY]: {\n    ...light.secondary,\n  },\n  [TERTIARY]: {\n    ...light.tertiary,\n    background: darkColors.tertiary,\n    backgroundActive: darkColors.tertiary,\n    backgroundHover: darkColors.tertiary,\n    color: darkColors.primary,\n  },\n  [TEXT]: {\n    ...light.text,\n    backgroundHover: darkColors.tertiary,\n  },\n  [DANGER]: {\n    ...light.danger,\n  },\n  [SUBTLE]: {\n    ...light.subtle,\n  },\n  [SUCCESS]: {\n    ...light.success,\n  },\n};\n","import { AnchorHTMLAttributes, ButtonHTMLAttributes, ReactNode } from \"react\";\nimport { Link, LinkProps } from \"react-router-dom\";\nimport { SpaceProps } from \"styled-system\";\n\nexport const sizes = {\n  SM: \"sm\",\n  MD: \"md\",\n} as const;\n\nexport const variants = {\n  PRIMARY: \"primary\",\n  SECONDARY: \"secondary\",\n  TERTIARY: \"tertiary\",\n  TEXT: \"text\",\n  DANGER: \"danger\",\n  SUBTLE: \"subtle\",\n  SUCCESS: \"success\",\n} as const;\n\nexport type Sizes = typeof sizes[keyof typeof sizes];\nexport type Variants = typeof variants[keyof typeof variants];\n\ntype ButtonTypes = ButtonHTMLAttributes<HTMLButtonElement> | AnchorHTMLAttributes<HTMLAnchorElement> | LinkProps;\n\nexport type ButtonProps = {\n  variant?: Variants;\n  size?: Sizes;\n  startIcon?: ReactNode;\n  endIcon?: ReactNode;\n  fullWidth?: boolean;\n  as?: \"a\" | \"button\" | typeof Link;\n  href?: string;\n  external?: boolean;\n  isLoading?: boolean;\n  disabled?: boolean;\n} & ButtonTypes &\n  SpaceProps;\n\nexport type ButtonThemeVariant = {\n  background: string;\n  backgroundActive: string;\n  backgroundHover: string;\n  border: string | number;\n  borderColorHover: string;\n  boxShadow: string;\n  boxShadowActive: string;\n  color: string;\n};\n\nexport type ButtonTheme = {\n  [key in Variants]: ButtonThemeVariant;\n};\n","import { MediaQueries, Breakpoints, Spacing } from \"./types\";\n\nexport const breakpointMap: { [key: string]: number } = {\n  xs: 370,\n  sm: 576,\n  md: 852,\n  lg: 968,\n  xl: 1080,\n};\n\nconst breakpoints: Breakpoints = Object.values(breakpointMap).map((breakpoint) => `${breakpoint}px`);\n\nconst mediaQueries: MediaQueries = {\n  xs: `@media screen and (min-width: ${breakpointMap.xs}px)`,\n  sm: `@media screen and (min-width: ${breakpointMap.sm}px)`,\n  md: `@media screen and (min-width: ${breakpointMap.md}px)`,\n  lg: `@media screen and (min-width: ${breakpointMap.lg}px)`,\n  xl: `@media screen and (min-width: ${breakpointMap.xl}px)`,\n  nav: `@media screen and (min-width: ${breakpointMap.lg}px)`,\n};\n\nexport const shadows = {\n  level1: \"0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)\",\n  active: \"0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4)\",\n  success: \"0px 0px 0px 1px #31D0AA, 0px 0px 0px 4px rgba(49, 208, 170, 0.2)\",\n  warning: \"0px 0px 0px 1px #ED4B9E, 0px 0px 0px 4px rgba(237, 75, 158, 0.2)\",\n  focus: \"0px 0px 0px 1px #0e61a7, 0px 0px 0px 4px rgba(14, 97, 167, 0.6)\",\n  inset: \"inset 0px 2px 2px -1px rgba(74, 74, 104, 0.1)\",\n};\n\nconst spacing: Spacing = [0, 4, 8, 16, 24, 32, 48, 64];\n\nconst radii = {\n  small: \"4px\",\n  default: \"16px\",\n  card: \"32px\",\n  circle: \"50%\",\n};\n\nconst zIndices = {\n  dropdown: 10,\n  modal: 100,\n};\n\nexport default {\n  siteWidth: 1200,\n  breakpoints,\n  mediaQueries,\n  spacing,\n  shadows,\n  radii,\n  zIndices,\n};\n","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { shadows } from \"../../theme/base\";\nimport { CardTheme } from \"./types\";\n\nexport const light: CardTheme = {\n  background: lightColors.card,\n  boxShadow: \"0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)\",\n  boxShadowActive: shadows.active,\n  boxShadowSuccess: shadows.success,\n  boxShadowWarning: shadows.warning,\n  cardHeaderBackground: \"linear-gradient(111.68deg, #F2ECF2 0%, #E8F2F6 100%)\",\n};\n\nexport const dark: CardTheme = {\n  background: darkColors.card,\n  boxShadow: \"0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)\",\n  boxShadowActive: shadows.active,\n  boxShadowSuccess: shadows.success,\n  boxShadowWarning: shadows.warning,\n  cardHeaderBackground: \"linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)\",\n};\n","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { RadioTheme } from \"./types\";\n\nexport const light: RadioTheme = {\n  handleBackground: lightColors.card,\n};\n\nexport const dark: RadioTheme = {\n  handleBackground: darkColors.card,\n};\n","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { ToggleTheme } from \"./types\";\n\nexport const light: ToggleTheme = {\n  handleBackground: lightColors.card,\n};\n\nexport const dark: ToggleTheme = {\n  handleBackground: darkColors.card,\n};\n","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { NavTheme } from \"./types\";\n\nexport const light: NavTheme = {\n  background: lightColors.card,\n  hover: \"#EEEAF4\",\n};\n\nexport const dark: NavTheme = {\n  background: darkColors.card,\n  hover: \"#473d5d\",\n};\n","import { darkColors, lightColors } from \"../../theme/colors\";\nimport { ModalTheme } from \"./types\";\n\nexport const light: ModalTheme = {\n  background: lightColors.card,\n};\n\nexport const dark: ModalTheme = {\n  background: darkColors.card,\n};\n","import { DefaultTheme } from \"styled-components\";\nimport { dark as darkAlert } from \"../components/Alert/theme\";\nimport { dark as darkButton } from \"../components/Button/theme\";\nimport { dark as darkCard } from \"../components/Card/theme\";\nimport { dark as darkRadio } from \"../components/Radio/theme\";\nimport { dark as darkToggle } from \"../components/Toggle/theme\";\nimport { dark as darkNav } from \"../widgets/Menu/theme\";\nimport { dark as darkModal } from \"../widgets/Modal/theme\";\nimport base from \"./base\";\nimport { darkColors } from \"./colors\";\n\nconst darkTheme: DefaultTheme = {\n  ...base,\n  isDark: true,\n  alert: darkAlert,\n  button: darkButton,\n  colors: darkColors,\n  card: darkCard,\n  toggle: darkToggle,\n  nav: darkNav,\n  modal: darkModal,\n  radio: darkRadio,\n};\n\nexport default darkTheme;\n","import { DefaultTheme } from \"styled-components\";\nimport { light as lightAlert } from \"../components/Alert/theme\";\nimport { light as lightButton } from \"../components/Button/theme\";\nimport { light as lightCard } from \"../components/Card/theme\";\nimport { light as lightRadio } from \"../components/Radio/theme\";\nimport { light as lightToggle } from \"../components/Toggle/theme\";\nimport { light as lightNav } from \"../widgets/Menu/theme\";\nimport { light as lightModal } from \"../widgets/Modal/theme\";\nimport base from \"./base\";\nimport { lightColors } from \"./colors\";\n\nconst lightTheme: DefaultTheme = {\n  ...base,\n  isDark: false,\n  alert: lightAlert,\n  button: lightButton,\n  colors: lightColors,\n  card: lightCard,\n  toggle: lightToggle,\n  nav: lightNav,\n  modal: lightModal,\n  radio: lightRadio,\n};\n\nexport default lightTheme;\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { dark, light } from '../ui-kit/theme';\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export default {\n  cake: {\n    97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    56: '0x279F2b7fD2E8956879DFC0c96A2D952C92CD184E',\n  },\n  syrup: {\n    97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    56: '0x607DA11257eE245C6dFe63CC90B0461A52849347',\n  },\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0xEb3B7A4Fce101354b3f4292b4E2539D61eeDEe73',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  wbnb: {\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n  ust: {\n    56: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  rabbitMintingFarm: {\n    56: '0x1C99222F857C1d72234703eC5b9Ed88089Bd7091',\n    97: '0x8f4739a48883Fdd89b65DC245dD5774fC8f44a67',\n  },\n  eth: {\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    97: '',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  }\n}","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'MEOWTH',\n    lpAddresses: {\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n      56: '0x279F2b7fD2E8956879DFC0c96A2D952C92CD184E',\n    },\n    tokenSymbol: 'PERRSERKER',\n    tokenAddresses: {\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n      56: '0x279F2b7fD2E8956879DFC0c96A2D952C92CD184E',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'MEOWTH-BNB LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0x8F52982996Ae360D7FD37aC774C32A7F7dfB6Cd5',\n    },\n    tokenSymbol: 'MEOWTH',\n    tokenAddresses: {\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n      56: '0x279F2b7fD2E8956879DFC0c96A2D952C92CD184E',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },  \n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'WYNAUT-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0xa8d547d000349b28a4e8c0289e15407c453ad009',\n    },\n    tokenSymbol: 'WYNAUT',\n    tokenAddresses: {\n      97: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      56: '0x067a5ad3f0f91acf512ffe66ea77f37b4dcaaf18',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  }\n\n]\n\nexport default farms","import addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getMeowthAddress = () => {\n  return getAddress(addresses.cake)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.mulltiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(addresses.wbnb)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getRabbitMintingFarmAddress = () => {\n  return getAddress(addresses.rabbitMintingFarm)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n\n  const userFarmAllowances = await fetchFarmUserAllowances(account);\n\n  console.log(`userFarmAllowances: ${JSON.stringify(userFarmAllowances)}`);\n\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  \n  console.log(`userFarmTokenBalances: ${JSON.stringify(userFarmTokenBalances)}`);\n\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n\n  \n  console.log(`userStakedBalances: ${JSON.stringify(userStakedBalances)}`);\n\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  \n  console.log(`userFarmEarnings: ${JSON.stringify(userFarmEarnings)}`);\n\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { Toast } from '@pancakeswap-libs/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    tokenName: 'MEOWTH',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x279F2b7fD2E8956879DFC0c96A2D952C92CD184E',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xEb3B7A4Fce101354b3f4292b4E2539D61eeDEe73',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://pancakeswap.finance/',\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n]\n\nexport default pools\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingMeowth('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed } = profileSlice.actions\n\n// Thunks\nexport const fetchProfile = (address: string) => async (dispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import merge from 'lodash/merge'\nimport { getContract } from 'utils/web3'\nimport pancakeProfileAbi from 'config/abi/pancakeProfile.json'\nimport teamsList from 'config/constants/teams'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getContract(pancakeProfileAbi, getPancakeProfileAddress())\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport pancakeProfileAbi from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport { Nft } from 'config/constants/types'\nimport { getContract } from 'utils/web3'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport nfts from 'config/constants/nfts'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getContract(pancakeProfileAbi, getPancakeProfileAddress())\nconst rabbitContract = getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users?address=${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\n\n      // Save the preview image to local storage for the exchange\n      localStorage.setItem(\n        `profile_${address}`,\n        JSON.stringify({\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\n        }),\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport toastsReducer from './toasts'\nimport poolsReducer from './pools'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    toasts: toastsReducer,\n    pools: poolsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}